view,
text,
image,
button,
input,
textarea,
navigator {
  border: 0 solid transparent;
}

text {
  display: inline-block;
}

.ui-transition-height {
  transition: height 0.3s;
  will-change: height;
}

.ui-transition-popup-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0.8);
  opacity: 0;
  transition: opacity 0.3s, transform 0.3s;
  will-change: opacity, transform;

  &.on {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

@each $dir in top, right, bottom, left {
  .ui-transition-popup-#{$dir} {
    position: absolute;
    opacity: 0;
    #{$dir}: -10%;
    right: 0;
    left: 0;
    margin: auto;
    transition: opacity 0.3s,
    #{$dir} 0.3s;
    will-change: opacity,
    #{$dir};

    &.on {
      opacity: 1;
      #{$dir}: 0;
    }
  }
}

.ui-transition-toast {
  transition: height 0.3s, opacity 0.3s;
  will-change: height, opacity;
}

/**
 * button 样式覆盖
 **/
.ui-button {
  --ui-button-border-color: var(--ui-border-color);
  padding-top: 14px;
  padding-bottom: 14px;
  line-height: 1;
  border-radius: 6px;

  &::after {
    border-width: 0px;
    border-style: solid;
    border-color: var(--ui-button-border-color);
    border-radius: 12px;
  }

  &[plain] {
    border: none!important;
  
    &::after {
      border-width: 2px!important;
    }
  }
}

.ui-button[type="default"],
.ui-button:not([type]) {
  color: var(--ui-text-color);
  background-color: var(--ui-fill-color);

  &.button-hover {
    color: var(--ui-text-color);
    background-color: var(--ui-fill-darker);
  }

  &[disabled],
  &[loading] {
    color: var(--ui-text-disabled);
    background-color: var(--ui-fill-light);
  }
}

.ui-button[plain][type="default"],
.ui-button[plain]:not([type]) {
  color: var(--ui-text-color);
  background-color: var(--ui-bg-color);

  &.button-hover {
    color: var(--ui-text-color);
    background-color: var(--ui-fill-dark);
  }

  &[disabled],
  &[loading] {
    color: var(--ui-text-disabled);
    background-color: var(--ui-bg-color);
  }
}

$buttonColors: (
  primary:'primary',
  success:'success',
  warning:'warning',
  warn:'warning',
  danger:'danger'
);

@each $key, $value in $buttonColors {
  .ui-button {
    &[type="#{$key}"] {
      color: #fff;
      background-color: var(--ui-#{$value});

      &.button-hover {
        color: rgba(#fff, 0.8);
        background-color: var(--ui-#{$value}-dark-2);
      }

      &[disabled],
      &[loading] {
        background-color: var(--ui-#{$value}-light-5);
      }
    }

    &[type="#{$key}"][plain] {
      --ui-button-border-color: var(--ui-#{$value}-light-5);
      color: var(--ui-#{$value});
      background-color: var(--ui-#{$value}-light-9);

      &.button-hover {
        background-color: var(--ui-#{$value}-light-8);
      }

      &[disabled],
      &[loading] {
        --ui-button-border-color: var(--ui-#{$value}-light-7);
        color: var(--ui-#{$value}-light-5);
        background-color: var(--ui-#{$value}-light-9);
      }
    }
  }
}

/**
 * 动画
 **/
.ui-rotate {
  animation: uiRotate 1s linear infinite;
}

@keyframes uiRotate {
  0% {
    transform: rotate(0);
  }

  50% {
    transform: rotate(180deg);
  }

  100% {
    transform: rotate(360deg);
  }
}