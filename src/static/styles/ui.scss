view,
text,
image,
button,
input,
textarea,
navigator {
  border: 0 solid transparent;
}

text {
  display: inline-block;
}

@mixin flex-mix($align: flex-start, $justify: flex-start, $direction: row, $display: flex) {
  display: $display;
  align-items: $align;
  justify-content: $justify;
  flex-direction: $direction;
}

.ui-page {
  font-size: 28rpx;
  color: var(--ui-text-base);
  --ui-safe-top-blank: 40rpx;
  --ui-safe-bottom-blank: 32rpx;
}

.ui-safe-top-bar {
  height: var(--ui-safe-area-top);
}

.ui-safe-bottom-bar {
  height: var(--ui-safe-area-bottom);
}

.p-safe-top {
  padding-top: var(--ui-safe-area-top, var(--ui-safe-top-blank));
}

.p-safe-bottom {
  padding-bottom: var(--ui-safe-area-bottom, var(--ui-safe-bottom-blank));
}

.ui-header-contrainer {
  height: 88rpx;
  position: relative;
  padding: var(--mp-menu-top, 12rpx) var(--ui-header-between, 78rpx) 0;
  box-sizing: border-box;
}

.ui-header-contrainer-fill {
  height: 88rpx;
  padding: var(--mp-menu-top, 12rpx) var(--ui-header-between, 0) 0 0;
  box-sizing: border-box;
}

.ui-header-title {
  height: var(--mp-menu-height, 64rpx);
  padding: 0 var(--mp-menu-right, 14rpx);
}

.ui-header-left {
  position: absolute;
  top: var(--mp-menu-top, 12rpx);
  left: var(--mp-menu-right, 14rpx);
}

.ui-mp-menu-light {
  --ui-menu-size: var(--mp-menu-height, 64rpx);
  width: var(--ui-menu-size);
  height: var(--ui-menu-size);
  @include flex-mix(center, center);
  font-size: 36rpx;
  color: #000;
  background-color: rgba(255, 255, 255, 0.6);
  border: 1px solid rgba(151, 151, 151, 0.2);
  border-radius: 50%;
  box-sizing: border-box;
}

.uni-hover {
  background-color: rgba(0, 0, 0, 0.1);

  &.light {
    background-color: rgba(255, 255, 255, 0.1);
  }
}

.uni-hover-overlay {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.1);
  }

  &.light::before {
    background-color: rgba(255, 255, 255, 0.1);
  }
}

.ui-transition-height {
  transition: height 0.3s;
  will-change: height;
}

.ui-transition-opacity {
  transition: opacity 0.3s;
  will-change: opacity;
}

.ui-transition-popup-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0.8);
  opacity: 0;
  transition: opacity 0.3s, transform 0.3s;
  will-change: opacity, transform;

  &.on {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

@mixin ui-transition-popup($dir) {
  position: absolute;
  opacity: 0;
  #{$dir}: -10%;
  margin: auto;
  transition: opacity 0.3s,
  #{$dir} 0.3s;
  will-change: opacity,
  #{$dir};

  &.on {
    opacity: 1;
    #{$dir}: 0;
  }
}

@each $dir in top, bottom {
  .ui-transition-popup-#{$dir} {
    @include ui-transition-popup($dir);
    right: 0;
    left: 0;
  }
}

@each $dir in right, left {
  .ui-transition-popup-#{$dir} {
    @include ui-transition-popup($dir);
    top: 0;
    bottom: 0;
  }
}

.ui-transition-toast {
  transition: height 0.3s, opacity 0.3s;
  will-change: height, opacity;
}

/**
 * button 样式覆盖
 **/
.ui-button {
  --ui-button-height: 44px;
  --ui-button-border-radius: var(--ui-rounded);
  font-size: 16px;
  height: var(--ui-button-height);
  @include flex-mix(center, center);
  line-height: 1;
  border-radius: var(--ui-button-border-radius);
  box-sizing: border-box;

  &:after {
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: calc(var(--ui-button-border-radius) * 2);
  }

  &[loading]::before {
    width: 1em;
    height: 1em;
    margin-right: 0.25em;
  }

  &[plain] {
    border-color: var(--ui-border-base);
  }

  &.circle {
    --ui-button-border-radius: calc(var(--ui-button-height) / 2);
  }
}

.ui-button[type="default"],
.ui-button:not([type]) {
  color: var(--ui-text-base);
  background-color: var(--ui-fill-light);

  &.button-hover {
    color: var(--ui-text-base);
    background-color: var(--ui-fill-dark);
  }

  &[disabled],
  &[loading] {
    color: var(--ui-text-disabled);
    background-color: var(--ui-fill-light);
  }
}

.ui-button[plain][type="default"],
.ui-button[plain]:not([type]) {
  color: var(--ui-text-base);
  background-color: var(--ui-bg-base);

  &.button-hover {
    color: var(--ui-text-base);
    background-color: var(--ui-fill-dark);
  }

  &[disabled],
  &[loading] {
    color: var(--ui-text-disabled);
    background-color: var(--ui-bg-base);
  }
}

.ui-button[size="mini"] {
  display: inline-flex;
  --ui-button-height: 28px;
  font-size: 12px;
  line-height: 1;
  padding: 0 1.2em;
}

$buttonColors: (
  primary:'primary',
  success:'success',
  warning:'warning',
  warn:'warning',
  danger:'danger'
);

@each $key, $value in $buttonColors {
  .ui-button {
    &[type="#{$key}"] {
      color: #fff;
      background-color: var(--ui-#{$value});

      &.button-hover {
        color: rgba(#fff, 0.8);
        background-color: var(--ui-#{$value}-dark-2);
      }

      &[disabled],
      &[loading] {
        color: rgba(#fff, 0.8);
        background-color: var(--ui-#{$value}-light-5);
      }
    }

    &[type="#{$key}"][plain] {
      border-color: var(--ui-#{$value}-light-5);
      color: var(--ui-#{$value});
      background-color: var(--ui-#{$value}-light-9);

      &.button-hover {
        background-color: var(--ui-#{$value}-light-8);
      }

      &[disabled],
      &[loading] {
        border-color: var(--ui-#{$value}-light-7);
        color: var(--ui-#{$value}-light-5);
        background-color: var(--ui-#{$value}-light-9);
      }
    }
  }
}

/**
 * 动画
 **/
.ui-rotate {
  animation: uiRotate 1s linear infinite;
}

@keyframes uiRotate {
  0% {
    transform: rotate(0);
  }

  50% {
    transform: rotate(180deg);
  }

  100% {
    transform: rotate(360deg);
  }
}